# -*- coding: utf-8 -*-
"""Untitled23.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ie2FYzd8qibZ9Ov8rau_gsLgj-5KST78
"""

import numpy as np
from PIL import Image
from sklearn.preprocessing import LabelEncoder
import pickle

import cv2

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/static/images

def getPrediction(filename):
    
    classes = ['clay','loam','loamy sand','sand','sandy loam']
    le = LabelEncoder()
    le.fit(classes)
    le.inverse_transform([2])
    
    
    #Load model
    SIZE = 256
    img_path = 'static/images/' + filename
    loaded_model1 = pickle.load(open('model/model1', 'rb'))
    loaded_model2 = pickle.load(open('model/model2', 'rb'))
    VGG_model=loaded_model1
    classifier=loaded_model2
    img=cv2.imread(img_path,cv2.IMREAD_COLOR)
    img = cv2.resize(img, (SIZE, SIZE))
    img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)
    img=np.array(img)
    input_img = np.expand_dims(img, axis=0) #Expand dims so the input is (num images, x, y, c)
    input_img=input_img/255.0
    input_img_feature=VGG_model.predict(input_img)
    input_img_features=input_img_feature.reshape(input_img_feature.shape[0], -1)
    prediction_RF = classifier.predict(input_img_features)[0] 
    prediction_RF = le.inverse_transform([prediction_RF])
    print("Diagnosis is:", prediction_RF)
    return prediction_RF